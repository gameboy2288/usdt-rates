// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/rate_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	domain "usdt-rates/internal/domain"

	gomock "github.com/golang/mock/gomock"
)

// MockRepositoryInterface is a mock of RepositoryInterface interface.
type MockRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryInterfaceMockRecorder
}

// MockRepositoryInterfaceMockRecorder is the mock recorder for MockRepositoryInterface.
type MockRepositoryInterfaceMockRecorder struct {
	mock *MockRepositoryInterface
}

// NewMockRepositoryInterface creates a new mock instance.
func NewMockRepositoryInterface(ctrl *gomock.Controller) *MockRepositoryInterface {
	mock := &MockRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositoryInterface) EXPECT() *MockRepositoryInterfaceMockRecorder {
	return m.recorder
}

// SaveAsk mocks base method.
func (m *MockRepositoryInterface) SaveAsk(rateID int64, ask domain.Ask) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveAsk", rateID, ask)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveAsk indicates an expected call of SaveAsk.
func (mr *MockRepositoryInterfaceMockRecorder) SaveAsk(rateID, ask interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveAsk", reflect.TypeOf((*MockRepositoryInterface)(nil).SaveAsk), rateID, ask)
}

// SaveBid mocks base method.
func (m *MockRepositoryInterface) SaveBid(rateID int64, bid domain.Ask) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveBid", rateID, bid)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveBid indicates an expected call of SaveBid.
func (mr *MockRepositoryInterfaceMockRecorder) SaveBid(rateID, bid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveBid", reflect.TypeOf((*MockRepositoryInterface)(nil).SaveBid), rateID, bid)
}

// SaveRate mocks base method.
func (m *MockRepositoryInterface) SaveRate(timestamp int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveRate", timestamp)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveRate indicates an expected call of SaveRate.
func (mr *MockRepositoryInterfaceMockRecorder) SaveRate(timestamp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRate", reflect.TypeOf((*MockRepositoryInterface)(nil).SaveRate), timestamp)
}
